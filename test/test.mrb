#
# mod_mruby test script
#
# vi /etc/httpd/conf.d/mruby.conf
# LoadModule mruby_module /usr/lib/httpd/modules/mod_mruby.so
# AddHandler mruby-script .mrb
#
# access to http://example.com/test.mrb
#

Apache.rputs("<font color=red><b>Test Start.</b></font><br>")
Apache.rputs("<br>")
Apache.rputs("<b>Request Class Test</b><br>")
r = Apache::Request.new()
r.content_type = "text/html"
Apache.rputs("filename = "+r.filename+"<br>")
Apache.rputs("uri = "+r.uri+"<br>")
Apache.rputs("---- request_rec changed ----<br>")
r.filename = "/var/www/html/index.html"
r.uri = "/index.html"
Apache.rputs("filename = "+r.filename+"<br>")
Apache.rputs("uri = "+r.uri+"<br>")
Apache.rputs("<br>")

Apache.rputs("<b>Apache Class Test</b><br>")
Apache.rputs("Apache version: " + Apache::apache_version + "<br>")
Apache.rputs("mod_mruby version: " + Apache::mod_mruby_version + "<br>")
Apache.sleep(3)
Apache.rputs("sleep function: OK<br>")
Apache.syslogger("warn", "mod_mruby warning syslogger test.")
Apache.rputs("syslogger function: OK<br>")
Apache.errlogger(4, "mod_mruby warning errlogger test.")
Apache.rputs("errlogger function: OK<br>")
Apache.rputs("OK status = "+Apache::OK.to_s+"<br>")
Apache.rputs("DECLINED status = "+Apache::DECLINED.to_s+"<br>")
Apache.rputs("HTTP_OK status = "+Apache::HTTP_OK.to_s+"<br>")
Apache.rputs("HTTP_SERVICE_UNAVAILABLE status = "+Apache::HTTP_SERVICE_UNAVAILABLE.to_s+"<br>")
Apache.rputs("<br>")

Apache.rputs("<b>Server Class Test</b><br>")
s = Apache::Server.new()
Apache.rputs("document_root = "+ s.document_root + "<br>")
Apache.rputs("error_fname = "+ s.error_fname + "<br>")
Apache.rputs("hostname = "+ s.hostname + "<br>")
Apache.rputs("timeout = "+ s.timeout.to_s + "<br>")
Apache.rputs("<br>")

Apache.rputs("<b>Connection Class Test</b><br>")
c = Apache::Connection.new()
Apache.rputs("remote_ip = "+ c.remote_ip + "<br>")
Apache.rputs("local_ip = "+ c.local_ip + "<br>")
Apache.rputs("keepalives = "+ c.keepalives.to_s + "<br>")
Apache.rputs("<br>")

Apache.rputs("<b>Notes Class Test</b><br>")
n = Apache::Notes.new()
n["memo"] = "hello"
Apache.rputs("memo = " + n["memo"] + "<br>")
Apache.rputs("<br>")

Apache.rputs("<b>Headers_in Class Test</b><br>")
hi = Apache::Headers_in.new()
Apache.rputs("Accept-Encoding = " + (hi["Accept-Encoding"].nil? ? "nil" : hi["Accept-Encoding"]) + "<br>")
hi["Accept-Encoding"] = "gzip"
Apache.rputs("Accept-Encoding = " + hi["Accept-Encoding"] + "<br>")
hiall = hi.headers_in_hash
Apache.rputs("headers_in hash size = " + hiall.size.to_s + "<br>")
hiall.each_key do |key|
    Apache.rputs("headers_in key = \"" + key + "\" val = \"" + hiall[key] + "\"<br>")
end
Apache.rputs("<br>")

Apache.rputs("<b>Headers_out Class Test</b><br>")
ho = Apache::Headers_out.new()
#ho["headers_out_test"] = "On"
hoall = ho.headers_out_hash
Apache.rputs("headers_out hash size = " + hoall.size.to_s + "<br>")
hoall.each_key do |key|
    Apache.rputs("headers_in key = \"" + key + "\" val = \"" + hoall[key] + "\"<br>")
end
Apache.rputs("<br>")

Apache.rputs("<b>Scoreboard Class Test</b><br>")
wc = Apache::Scoreboard.new()
Apache.rputs("child pid = " + wc.pid.to_s + "<br>")
Apache.rputs("thread limit = " + wc.thread_limit.to_s + "<br>")
Apache.rputs("server limit = " + wc.server_limit.to_s + "<br>")
Apache.rputs("total kbyte = " + wc.total_kbyte.to_s + "<br>")
Apache.rputs("total access = " + wc.total_access.to_s + "<br>")
Apache.rputs("restart time = " + wc.restart_time.to_s + "<br>")
Apache.rputs("idle worker = " + wc.idle_worker.to_s + "<br>")
Apache.rputs("busy worker = " + wc.busy_worker.to_s + "<br>")
Apache.rputs("uptime = " + wc.uptime.to_s + "<br>")
Apache.rputs("access counter = " + wc.access_counter(wc.pid).to_s + "<br>")
Apache.rputs("scoreboard status hash size = " + wc.status.size.to_s + "<br>")
wc.status.each_key do |key|
    Apache.rputs("scoreboard key = \"" + key + "\" val = \"" + wc.status[key] + "\"<br>")
end
Apache.rputs("scoreboard counter hash size = " + wc.counter.size.to_s + "<br>")
wc.counter.each_key do |key|
    Apache.rputs("scoreboard key = \"" + key + "\" val = \"" + wc.counter[key].to_s + "\"<br>")
end
Apache.rputs("<br>")

Apache.rputs("<font color=red><b>Test Complete. Wellcome to mod_mruby world!!</b></font><br>")

Apache.return(Apache::OK)
